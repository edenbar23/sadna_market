# System Initial State Commands - Exact Scenario Implementation
# This file implements the specific scenario:
# 1. System starts with u1 defined as admin (handled by system config)
# 2. Register users u2, u3, u4, u5, u6
# 3. Login with u2
# 4. Open store named s1 with u2
# 5. Add Bamba product to store s1 by u2 with price 30 and quantity 20
# 6. Appoint u3 as manager in store s1 with inventory management permissions (by u2)
# 7. Appoint u4 and u5 as store owners in s1 by u2
# 8. Logout u2

# Step 1: Registration of users u2, u3, u4, u5, u6
guest-registration(u2, *Password123!*, *u2@market.com*, *User*, *Two*);
guest-registration(u3, *Password123!*, *u3@market.com*, *User*, *Three*);
guest-registration(u4, *Password123!*, *u4@market.com*, *User*, *Four*);
guest-registration(u5, *Password123!*, *u5@market.com*, *User*, *Five*);
guest-registration(u6, *Password123!*, *u6@market.com*, *User*, *Six*);

# Step 2: Login with u2
login(u2, *Password123!*);

# Step 3: Open store s1 with u2
open-shop(u2, *s1*, *Store s1 - Sample store created during initialization*, "123 Market Street, Sample City, SC 12345", s1@market.com, *555-STORE-01*);

# Step 4: Add Bamba product to store s1 by u2 with price 30 and quantity 20
add-product(u2, *s1*, *Bamba*, *Delicious peanut snack - crispy and tasty*, *Snacks*, 30.0, 20);

# Step 5: Appoint u3 as manager in store s1 with inventory management permissions (by u2)
appoint-manager(u2, *s1*, u3, *MANAGE_INVENTORY,ADD_PRODUCT,REMOVE_PRODUCT,UPDATE_PRODUCT*);

# Step 6: Appoint u4 and u5 as store owners in s1 by u2
appoint-owner(u2, *s1*, u4);
appoint-owner(u2, *s1*, u5);

# Step 7: Logout of u2
logout(u2);